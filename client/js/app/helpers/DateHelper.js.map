{"version":3,"sources":["../../app-ES6/helpers/DateHelper.js"],"names":["DateHelper","Error","texto","test","Date","split","map","item","index","data","getDate","getMonth","getFullYear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;AACT,sCAAa;AAAA;;AACT,0BAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACA;AACH;;;;iDACmBC,K,EAAM;AACtB;AACA,4BAAG,CAAC,oBAAoBC,IAApB,CAAyBD,KAAzB,CAAJ,EACI,MAAMD,MAAO,uCAAP,CAAN;AACJ;;AAEA,kEAAWG,IAAX,mCAAoBF,MAAMG,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAOC,KAAP;AAAA,mCAAiBD,OAAOC,QAAO,CAA/B;AAAA,yBAArB,CAApB;AACF;AACD;;;iDAEmBC,I,EAAK;;AAEnB,+BAAWA,KAAKC,OAAL,EAAX,UAA6BD,KAAKE,QAAL,KAAiB,CAA9C,UAAmDF,KAAKG,WAAL,EAAnD;AACL","file":"DateHelper.js","sourcesContent":["export class DateHelper{\r\n    constructor(){\r\n        throw new Error('Essa class não pode ser instaciada')\r\n        // caso o dev de um new DateHelper, vai aparecer esse error.\r\n    }\r\n    static stringToDate(texto){\r\n        // isso e um expressão regular para fazer ela colocar ela entre / \\d .... /\r\n        if(!/\\d{4}-\\d{2}-\\d{2}/.test(texto))\r\n            throw Error ('A data que tem que passa em aaa-mm-dd')\r\n        // vai test(o parametro, se não estive como na expreção vai jogar um error)\r\n\r\n        return new Date (...texto.split('-').map((item, index) => item - index %2))\r\n      // esse texto vai receber this._inputDate.value\r\n    }\r\n\r\n    static dateToString(data){\r\n        \r\n          return  `${data.getDate()}/${data.getMonth() +1}/${data.getFullYear()}`\r\n    }\r\n}"]}