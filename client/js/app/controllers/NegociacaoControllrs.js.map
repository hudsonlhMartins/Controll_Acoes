{"version":3,"sources":["../../app-ES6/controllers/NegociacaoControllrs.js"],"names":["Mensagem","ListaNegociacao","Negociacao","ConnectionFactory","Bind","DateHelper","negociacaoServer","NegociacoesView","MensagemView","negociacaoDao","NegociacaoControllers","$","document","querySelector","bind","_inputDate","_inputQuantidade","_inputValor","_listaNegocicoes","_messangem","getConeection","then","connection","dao","listaTodos","negociacoes","forEach","adicionar","negociacao","catch","console","log","erro","texto","event","preventDefault","_criarNegociacao","conection","_limpaFormulario","server","obtemNegociacaodaSemana","filter","some","JSON","stringify","negocicao","negociacaoExistente","Promise","all","obtemNegociacaodaSemanaAnterior","obtemNegociacaodaSemanaRetrasada","reduce","arrayAchatado","array","concat","apagatodas","mensagem","esvazia","stringToDate","value","parseInt","parseFloat","focus"],"mappings":"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","file":"NegociacaoControllrs.js","sourcesContent":["import {Mensagem} from '../models/Mensagem'\r\nimport {ListaNegociacao} from '../models/ListaNegociacoes'\r\nimport {Negociacao} from '../models/Negociacao'\r\nimport {ConnectionFactory} from '../services/connectionFactory'\r\nimport {Bind} from '../helpers/Bind'\r\nimport {DateHelper} from '../helpers/DateHelper'\r\nimport {negociacaoServer} from '../services/negociacaoServer'\r\nimport {NegociacoesView} from '../views/NegociacoesViews'\r\nimport {MensagemView} from '../views/MensagemView'\r\nimport {negociacaoDao} from '../dao/NegociacaoDao'\r\n\r\nexport class NegociacaoControllers{\r\n    constructor(){\r\n         let $ = document.querySelector.bind(document)\r\n         this._inputDate = $('#data')\r\n         this._inputQuantidade = $('#quantidade')\r\n         this._inputValor = $('#valor')\r\n        \r\n      \r\n        this._listaNegocicoes = new Bind\r\n            (new ListaNegociacao(), \r\n            new NegociacoesView($('#negociacoes_viwes')), \r\n            'adicionar', 'esvazia')\r\n\r\n         \r\n        this._messangem = new Bind(\r\n            new Mensagem(), \r\n            new MensagemView($('#messagemView')),\r\n            'texto')\r\n        \r\n        ConnectionFactory.getConeection().then(connection => new negociacaoDao(connection))\r\n                .then(dao => dao.listaTodos())\r\n                .then(negociacoes => {\r\n                    negociacoes.forEach(negociacao =>{\r\n                        this._listaNegocicoes.adicionar(negociacao)\r\n                    })\r\n                })\r\n                .catch(erro =>{\r\n                    console.log(erro)\r\n                    this._messangem.texto = erro\r\n                })\r\n                \r\n        \r\n    }\r\n    adicionar(event){\r\n        event.preventDefault()\r\n        \r\n        ConnectionFactory.getConeection().then(conection =>{ \r\n            let negociacao = this._criarNegociacao()\r\n            new negociacaoDao(conection)\r\n            .adicionar(negociacao)\r\n                .then(()=>{\r\n                    this._listaNegocicoes.adicionar(negociacao)\r\n                    this._limpaFormulario()\r\n                    this._messangem.texto = 'Item adicionado com sucesso'\r\n                })\r\n        }).catch(erro => this._messangem.texto = erro)\r\n        \r\n    }\r\n\r\n    importaNegociacaoes(){\r\n        let server = new negociacaoServer()\r\n\r\n        server\r\n            .obtemNegociacaodaSemana()\r\n            .then(negociacoes => \r\n                negociacoes.filter(negocicao => \r\n                    !this._listaNegocicoes.negociacoes.some(negociacaoExistente => \r\n                        JSON.stringify(negocicao)==JSON.stringify(negociacaoExistente))\r\n                    ))\r\n        \r\n\r\n        Promise.all([server.obtemNegociacaodaSemana(),\r\n                    server.obtemNegociacaodaSemanaAnterior(),\r\n                    server.obtemNegociacaodaSemanaRetrasada()]\r\n                    )\r\n                    .then(negociacoes =>{\r\n                        console.log(negociacoes)\r\n// esse negociacoes vai vim um array dentro dele tem 3 array com negocicoes\r\n// por isso usando o reduce para colocar esse 3 array em um sÃ³\r\n                        negociacoes.reduce((arrayAchatado, array)=>\r\n                                            arrayAchatado.concat(array),[]\r\n        // array em branco e como o primeiro parametro vai comecar__\r\n        // segundo parametro e o array que estamos varrendo\r\n                        )\r\n                        .forEach(negociacao => this._listaNegocicoes.adicionar(negociacao))\r\n                    })\r\n                    .catch(erro =>{\r\n                        return this._messangem.texto =erro \r\n                    })\r\n    }\r\n\r\n    apagar(){\r\n\r\n        ConnectionFactory.getConeection()\r\n            .then(connection => new negociacaoDao(connection))\r\n            .then(dao => dao.apagatodas())\r\n            .then(mensagem => {\r\n                this._messangem.texto = mensagem\r\n                this._listaNegocicoes.esvazia()\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro)\r\n            })\r\n        \r\n\r\n        \r\n        \r\n    }\r\n\r\n    _criarNegociacao(){\r\n        return new Negociacao(\r\n            DateHelper.stringToDate(this._inputDate.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        ) \r\n    }\r\n\r\n    _limpaFormulario(){\r\n        this._inputDate.value = ''\r\n        this._inputQuantidade.value = 1\r\n        this._inputValor.value = 0.0\r\n\r\n        this._inputDate.focus()\r\n    }\r\n}"]}